{
  "filename": "blocking.md",
  "__html": "<h1>Blocking</h1>\n<p>Blocking是阻断节点，它会根据其前置任务的运行状态，并结合用户在添加节点时配置的参数，决定是否将整个运行中的工作流暂停执行，即阻断。用户同时可以设置是否在工作流被阻断时进行告警。用户介入后，如果发现工作流的执行状态符合预期，则可以选择继续执行。</p>\n<h2>任务参数</h2>\n<ul>\n<li>节点名称：一个工作流定义中的节点名称是唯一的。</li>\n<li>运行标志：标识这个节点是否能正常调度,如果不需要执行，可以打开禁止执行开关。</li>\n<li>描述：描述该节点的功能。</li>\n<li>任务优先级：worker线程数不足时，根据优先级从高到低依次执行，优先级一样时根据先进先出原则执行。</li>\n<li>Worker分组：任务分配给worker组的机器机执行，选择Default，会随机选择一台worker机执行。</li>\n<li>失败重试次数：任务失败重新提交的次数。</li>\n<li>失败重试间隔：任务失败重新提交任务的时间间隔</li>\n<li>超时告警：勾选超时告警、超时失败，当任务超过&quot;超时时长&quot;后，会发送告警邮件并且任务执行失败</li>\n<li>阻断时机：有两个选项，它们定义了将工作流阻断的时机\n<ul>\n<li>失败时阻断：即自定义参数的判断逻辑为<strong>假</strong>时阻断工作流</li>\n<li>成功时阻断：即自定义参数的判断逻辑为<strong>真</strong>时阻断工作流</li>\n</ul>\n</li>\n<li>阻断时告警：当工作流被阻断时，是否要向相关用户发送告警</li>\n<li>自定义参数：可以为blocking选择一个或多个上游任务\n<ul>\n<li>增加上游依赖：通过选择第一个参数选择对应的任务名称，通过第二个参数选择该任务的期望状态</li>\n<li>上游任务关系选择：当有多个上游任务时，可以通过<code>且</code>以及<code>或</code>操作符实现任务的复杂关系。</li>\n</ul>\n</li>\n</ul>\n<h2>相关任务</h2>\n<ul>\n<li><a href=\"conditions.md\">Conditions</a>：Condition节点，主要功能是根据用户设置的自定义参数的判断逻辑，决定要走后续哪个分支</li>\n<li><a href=\"switch.md\">Switch</a>：Switch节点，主要依据全局变量的值和用户所编写的表达式判断结果执行对应分支</li>\n</ul>\n<p>它们与Blocking节点最主要的区别是：Blocking能够阻断，即暂停工作流执行；它们是选择一条后续执行分支</p>\n",
  "link": "/dist/zh-cn/docs/dev/user_doc/guide/task/blocking.html",
  "meta": {}
}